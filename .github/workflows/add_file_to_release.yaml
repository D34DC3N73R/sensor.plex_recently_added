name: Add Release with ZIP

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create ZIP file
        run: |
          mkdir -p output
          cd custom_components/plex_recently_added
          zip -r ../../output/plex_recently_added.zip ./*

      - name: Check if release exists
        id: check_release
        run: |
          release_id=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref_name }}" \
            | jq -r '.id // empty')
          echo "Release ID: $release_id"
          echo "release_id=$release_id" >> $GITHUB_ENV

      - name: Create GitHub Release (if not exists)
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: "${{ github.ref_name }}"
          draft: false
          prerelease: false
        if: ${{ env.release_id == '' }}

      - name: Generate final upload URL
        id: generate_upload_url
        run: |
          if [[ -n "${{ env.release_id }}" ]]; then
            echo "generated_url=https://uploads.github.com/repos/${{ github.repository }}/releases/${{ env.release_id }}/assets?name=plex_recently_added.zip" >> $GITHUB_ENV
          else
            echo "generated_url=${{ steps.create_release.outputs.upload_url }}?name=plex_recently_added.zip" >> $GITHUB_ENV
          fi

      - name: Upload ZIP file to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.generated_url }}
          asset_path: output/plex_recently_added.zip
          asset_name: plex_recently_added.zip
          asset_content_type: application/zip
